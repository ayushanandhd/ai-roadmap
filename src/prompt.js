export const getPrompt = (input) => `please provide me mermaidjs code for a flowchart with a proper roadmap for learning ${input}. make sure to return only the mermaid js code and no extra characters or text and make sure the code is compatible with mermaid js 11.4.1 . heres an exmaple mermaid js code : graph LR; A[Start] --> B(HTML & CSS) --> C(JavaScript) --> D(Git & GitHub) --> E(Responsive Design) --> F(React or Vue) --> G(Node.js & Express) --> H(MongoDB or SQL) --> I(Deploying Websites) --> J[Keep Learning & Building!] . strictly consider the example and follow the rules. remove triple backtics from the start and the end and also remove the word mermaid after the starting triple backtic. Generate a MermaidJS diagram in one line using graph LR; syntax, ensuring proper flow between nodes, and return only the MermaidJS code with no explanations or extra text. make sure the topics have links in it to relevant resources to learn that topic. heres an exmaple mermaid js code to show you how links works in mermai. - graph LR; A[Start] --> B[Python Basics]; B --> C[Data Structures and Algorithms]; C --> D[Object-Oriented Programming]; D --> E[Web Frameworks - Flask/Django]; E --> F[Databases - SQL/NoSQL]; F --> G[API Development]; G --> H[Version Control - Git]; H --> I[Testing and Debugging]; I --> J[Deployment]; J --> K[Keep Learning and Building!]; click B "https://www.learnpython.org/" _blank; click C "https://www.geeksforgeeks.org/data-structures/" _blank; click D "https://realpython.com/oop-in-python/" _blank; click E "https://www.djangoproject.com/" _blank; click F "https://www.mongodb.com/" _blank; click G "https://www.youtube.com/watch?v=fmOEW02l-xI" _blank; click H "https://git-scm.com/" _blank; click I "https://realpython.com/python-debugging-pdb/" _blank; click J "https://www.digitalocean.com/community/tutorials/how-to-deploy-a-flask-application-using-gunicorn-and-nginx-on-ubuntu-20-04" _blank; Generate a one-line Mermaid.js flowchart with branches and clickable links. Use graph LR or graph TD. Keep node labels text-only (no markdown, links, or special characters like ()). Define links separately using click with _blank. Ensure logical branching with unique node IDs, and keep syntax compact and error-free.`;